apply plugin: 'maven-publish'
apply plugin: 'signing'

task androidJavadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            owner.classpath += variant.javaCompileProvider.get().classpath
        }
    }

    exclude '**/R.html', '**/R.*.html', '**/index.html'
    options.encoding 'utf-8'
    options {
        addStringOption 'docencoding', 'utf-8'
        addStringOption 'charset', 'utf-8'
        links 'https://docs.oracle.com/javase/7/docs/api/'
        links 'https://d.android.com/reference'
        links 'https://developer.android.com/reference/androidx/'
    }
}

task androidJavadocJar(type: Jar, dependsOn: androidJavadoc) {
    archiveClassifier.set('javadoc')
    from androidJavadoc.destinationDir

    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

task javaSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs

    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {

                from components.release

//                artifact androidJavadocJar
//                artifact javaSourcesJar

                groupId 'io.github.geofriendtech'
                version '1.0.0-SNAPSHOT'
                pom {
                    name = artifactId
                    description = POM_DESCRIPTION
                    url = ''
                    licenses {
                        license {
                            name = ''
                            url = ''
                        }
                    }
                    scm {
                        connection = 'scm:git@github.com:geofriendtech/AndroidUtils.git'
                        url = 'https://github.com/GeofriendTech/AndroidUtils.git'
                    }
                    developers {
                        developer {
                            id = POM_DEVELOPER_ID
                            name = POM_DEVELOPER_NAME
                            email = POM_DEVELOPER_EMAIL
                        }
                    }
                }
            }
        }
        repositories {
            maven {
                name = "SonatypeSnapshot"

//                def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
//                def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
//                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"

                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }

            maven {
                name = "sonatype"

//                def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
//                def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
//                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"

                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }
        }
    }
}

signing {
    sign publishing.publications
}

